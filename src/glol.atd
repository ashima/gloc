type glol = {
  glol:version;
  ?base:string option;
  ?transmit:xmitmeta option;
  ?li:li option;
  ~cache: (string * glol) list <json repr="object">;
  ?glom:glom option;
}

type xmitmeta = {
  ?date:string option;
  ?content_location:string option;
  ?etag:string option;
}

type li = [
| A <json name="a"> of string
| Define <json name="define"> of (string * string option)
| Concat <json name="concat"> of li list
| Rename <json name="rename"> of ((string * string) list * li)
| Export <json name="export"> of (string list * li)
]

type version <ocaml from="Glo"> = abstract
type glom <ocaml predef module="Yojson.Safe" t="json"> = abstract
